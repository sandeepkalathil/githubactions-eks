name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: freshfarm-repo  
  EKS_CLUSTER_NAME: Freshfarm-cluster  
  K8S_NAMESPACE: freshmart  

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      - run: npm run test

  static-analysis:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  build-and-push:
    needs: static-analysis
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      security-events: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set ECR Image Tag
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "IMAGE_LATEST=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest" >> $GITHUB_ENV
          echo "Image URI: $IMAGE_URI"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_URI }}
            ${{ env.IMAGE_LATEST }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_URI }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write 
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-north-1  # Hardcoding since env variables might not be set yet

      - name: Set Environment Variables
        run: |
          echo "AWS_REGION=eu-north-1" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=freshfarm-repo" >> $GITHUB_ENV
          echo "EKS_CLUSTER_NAME=Freshfarm-cluster" >> $GITHUB_ENV
          echo "K8S_NAMESPACE=freshmart" >> $GITHUB_ENV
          echo "IMAGE_URI=123456789.dkr.ecr.eu-north-1.amazonaws.com/freshfarm-repo:latest" >> $GITHUB_ENV
        shell: bash

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Ensure Namespace Exists
        run: |
          kubectl create namespace $K8S_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      - name: Print Debugging Info
        run: |
          echo "AWS_REGION=${{ env.AWS_REGION }}"
          echo "ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}"
          echo "EKS_CLUSTER_NAME=${{ env.EKS_CLUSTER_NAME }}"
          echo "K8S_NAMESPACE=${{ env.K8S_NAMESPACE }}"
          echo "IMAGE_URI=${{ env.IMAGE_URI }}"
          kubectl config view
          kubectl get namespaces
          kubectl get deployments -A